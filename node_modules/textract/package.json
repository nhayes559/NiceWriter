{
  "name": "textract",
  "version": "0.19.0",
  "homepage": "https://github.com/dbashford/textract",
  "author": {
    "name": "David Bashford"
  },
  "description": "Extracting text from files of various type including html, pdf, doc, docx, xls, xlsx, pptx, png, jpg, gif, rtf, text/*.",
  "contributors": [
    {
      "name": "David Bashford",
      "email": "dbashford@hotmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/dbashford/textract"
  },
  "keywords": [
    "textract",
    "extract",
    "html",
    "text",
    "pdf",
    "docx",
    "doc",
    "xls",
    "xlsx",
    "png",
    "jpg",
    "gif",
    "rtf",
    "dxf"
  ],
  "dependencies": {
    "mime": "1.2.9",
    "pdf-text-extract": "1.1.3",
    "xpath": "0.0.5",
    "xmldom": "0.1.16",
    "j": "0.3.11",
    "cheerio": "0.17.0",
    "meow": "2.0.0"
  },
  "devDependencies": {
    "mocha": "1.9.0",
    "chai": "1.5.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.8"
  },
  "bin": {
    "textract": "./bin/textract"
  },
  "main": "./lib/index",
  "readme": "textract\n========\n\nA text extraction node module.\n\n[![NPM](https://nodei.co/npm/textract.png?compact=true)](https://nodei.co/npm/textract/)\n[![NPM](https://nodei.co/npm-dl/textract.png)](https://nodei.co/npm/textract/)\n\n## Currently Extracts...\n\n* HTML\n* PDF\n* DOC\n* RTF\n* DOCX\n* XLS\n* PPTX\n* DXF\n* PNG\n* JPG\n* GIF\n* `application/javascript`\n* All `text/*` mime-types.\n\nIn almost all cases above, what textract cares about is the mime type.  So `.html` and `.htm`, both possessing the same mime type, will be extracted.  Other extensions that share mime types with those above should also extract successfully. For example, `application/vnd.ms-excel` is the mime type for `.xls`, but also for 5 other mime types.\n\nDoes textract not extract from files of the type you need?  Add an issue or submit a pull request.  It's super easy to add an extractor for a new mime type.\n\n## Install\n\n```\nnpm install textract\n```\n\n## Requirements\n\n* `PDF` extraction requires `pdftotext` be installed, [link](http://www.foolabs.com/xpdf/download.html)\n* `DOC` extraction requires `catdoc` be installed, [link](http://www.wagner.pp.ru/~vitus/software/catdoc/), unless on OSX in which case textutil (installed by default) is used.\n* `RTF` extraction requires `catdoc` be installed, unless on OSX in which case textutil (installed by default on OSX) is used.\n* `DOCX` extraction requires `unzip` be available\n* `PPTX` extraction requires `unzip` be available\n* `PNG`, `JPG` and `GIF` require `tesseract` to be available, [link](http://code.google.com/p/tesseract-ocr/).  Images need to be pretty clear, high DPI and made almost entirely of just text for `tesseract` to be able to accurately extract the text.\n* `DXF` extraction requires `drawingtotext` be available, [link](https://github.com/davidworkman9/drawingtotext)\n\n## Configuration\n\nConfiguration can be passed into textract.  The following configuration options are available\n\n* `preserveLineBreaks`: By default textract does NOT preserve line breaks. Pass this in as `true` and textract will not strip any line breaks.\n* `exec`: Some extractors (xlsx, docx, dxf) use node's `exec` functionality. This setting allows for providing [config to `exec` execution](http://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback). One reason you might want to provide this config is if you are dealing with very large files. You might want to increase the `exec` `maxBuffer` setting.\n* `[ext].exec`: Each extractor can take specific exec config.\n* `tesseract.lang`: A pass-through to tesseract allowing for setting of language for extraction. ex: `{ tesseract: { lang:\"chi_sim\" } }`\n\n## Usage\n\n### Commmand Line\n\nIf textract is installed gloablly, via `npm install -g textract`, then the following command will write the extracted text to the console.\n\n```\n$ textract pathToFile\n```\n\n#### Flags\n\nConfiguration flags can be passed into textract via the command line.  \n\nParameters like `preserveLineBreaks` (defaults to `true`) can be passed in directly.\n\n```\ntextract pathToFile --preserveLineBreaks false\n```\n\nParameters like `exec.maxBuffer` can be passed as you'd expect.\n\n```\ntextract pathToFile --exec.maxBuffer 500000\n```\n\nAnd multiple flags can be used together.\n\n```\ntextract pathToFile --preserveLineBreaks false --exec.maxBuffer 500000\n```\n\n### Node\n\n#### Import\n\n```javascript\nvar textract = require('textract');\n```\n\n#### Execution\n\nIf you do not know the mime type of the file\n\n```javascript\ntextract(filePath, function( error, text ) {})\n```\n\nIf you know the mime type of the file\n\n```javascript\ntextract(type, filePath, function( error, text ) {})\n```\n\nIf you wish to pass some config...and know the mime type...\n\n```javascript\ntextract(type, filePath, config, function( error, text ) {})\n```\n\nIf you wish to pass some config, but do not know the mime type\n\n```javascript\ntextract(filePath, config, function( error, text ) {})\n```\n\nError will contain informative text about why the extraction failed. If textract does not currently extract files of the type provided, a `typeNotFound` flag will be tossed on the error object.\n\n## Release Notes\n\n### 0.19.0\n* [#30](https://github.com/dbashford/textract/issues/30), [#34](https://github.com/dbashford/textract/issues/34).  The command line has been improved, allowing for all the configuration options to be provided.\n\n### 0.18.0\n* [#36](https://github.com/dbashford/textract/issues/36) Fixed error with previous deploy.\n* [#32](https://github.com/dbashford/textract/issues/32) Fixed `docx` line break issue.\n\n### 0.17.0\n* Updated character stripping regex to be more lenient.\n\n### 0.16.0\n* Added HTML extraction.\n* Added ability for extractors to register for specific extensions (not yet used).  This handles cases where extensions (like `.webarchive`) do not have recognized mime types.\n\n### 0.15.0\n* Addressed some lingering regex issues from previous release.\n* Added tests for RTF, more tests for DOC\n* [#29](https://github.com/dbashford/textract/issues/29) Introduced new extractor for `.doc` and `.rtf` __for OSX only__.  All non-OSX operating systems will continue to use `catdoc`. Going forward, because of issues getting `catdoc` installed on OSX, on OSX only `textutil` will be used. `textutil` comes default installed with OSX.\n\n### 0.14.0\n* [#29](https://github.com/dbashford/textract/issues/29) which resulted in the following changes:\n1. writing info messages to `stderr` when extractors taking awhile to get going\n2. no longer removing â€¦\n3. centralized some cleansing regexes, also no longer removing multiple back to back spaces using `\\s` as it was removing any back to back newlines.  Now scoping back to back replacing to `[\\t\\v\\u00A0]`.\n\n### 0.13.2\n* [#27](https://github.com/dbashford/textract/issues/27), addressed issues with page ordering in `pptx` extraction.\n\n### 0.13.1\n* [#25](https://github.com/dbashford/textract/issues/25), added language support for tesseract, see `tesseract.lang` property.\n* Updated regex that strips bad characters to not strip (some) chinese characters.  The regex will likely need updating by someonw more familiar with Chinese. =)\n\n### 0.13.0\n* [#26](https://github.com/dbashford/textract/issues/26), using `os.tmpdir()` rather than a temp dir inside textract.\n* Upgraded to latest `j` (dependency)\n* Removed `macProcessGif` option and tests as tesseract seems to work on Mac just fine now\n\n### 0.12.0\n* [#21](https://github.com/dbashford/textract/issues/21), [#22](https://github.com/dbashford/textract/issues/22), Now using [j](https://www.npmjs.org/package/j) via its binaries rather than using it via node. This makes XLS/X extraction slower, but reduces memory consumption of textract signifcantly.\n\n### 0.11.2\n* Updated pdf-text-extract to latest, fixes [#20](https://github.com/dbashford/textract/issues/20).\n\n### 0.11.1\n* Addressed path escaping issues with tesseract, fixes [#18] (https://github.com/dbashford/textract/issues/18)\n\n### 0.11.0\n* Using [j](https://github.com/SheetJS/j) to handle `xls` and `xlsx`, this removes the requirement on the `xls2csv` binary.\n* j also supports `xlsb` and `xlsm`\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dbashford/textract/issues"
  },
  "_id": "textract@0.19.0",
  "dist": {
    "shasum": "f775eadc98f8c8050b6a3c3de1b4bf4903ce5437"
  },
  "_from": "textract@",
  "_resolved": "https://registry.npmjs.org/textract/-/textract-0.19.0.tgz"
}
